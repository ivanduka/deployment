on: [push]
jobs:
  build:
    name: Build image and upload it to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: set_vars
        run: |
          export TZ=America/Vancouver
          date +'%Y-%m-%dT%H:%M:%S' > CURRENT_TIMESTAMP
          echo $GITHUB_SHA | cut -c1-8 > SHORT_SHA

          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "action_state=yellow" >> $GITHUB_ENV
      - name: Output variables
        run: |
          echo "OUTPUT: ivanduka/deployment:$(cat SHORT_SHA)"
          echo "OUTPUT: $(cat CURRENT_TIMESTAMP)"

          echo "GITHUB_SHA_SHORT1: $GITHUB_SHA_SHORT"
          echo "GITHUB_SHA_SHORT2: ${{ env.GITHUB_SHA_SHORT }}"

          echo "${{ env.action_state }}"
          echo $action_state
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ivanduka/deployment:${{ env.GITHUB_SHA_SHORT }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    name: Deploy to target machine
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Test global variables availability
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ env.GITHUB_SHA_SHORT }}
          echo "OUTPUT: ivanduka/deployment:$(cat SHORT_SHA)"
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            whoami