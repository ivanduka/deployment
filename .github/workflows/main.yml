on: [push]
jobs:
  build:
    name: Build image, upload it to Docker Hub, and deploy to server
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

#      - name: Print vars:
#        run: |
#          echo $GITHUB_WORKFLOW
#          echo GITHUB_RUN_ID
#          echo GITHUB_RUN_NUMBER
#          echo GITHUB_ACTION
#          echo GITHUB_ACTIONS
#          echo GITHUB_ACTOR
#          echo GITHUB_REPOSITORY
#          echo GITHUB_EVENT_NAME
#          echo GITHUB_EVENT_PATH
#          echo GITHUB_WORKSPACE
#          echo GITHUB_SHA
#          echo GITHUB_REF
#          echo GITHUB_HEAD_REF
#          echo GITHUB_BASE_REF
#          echo GITHUB_SERVER_URL
#          echo GITHUB_API_URL
#          echo GITHUB_GRAPHQL_URL

      - name: Set Variables
        run: |
          export TZ=America/Vancouver
          echo "CURRENT_TIMESTAMP=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ivanduka/deployment:${{ env.GITHUB_SHA_SHORT }}
            ivanduka/deployment:latest

      - name: copy file via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.PORT }}
          overwrite: true
          source: "docker-compose.yml"
          target: "deployment"

      - name: executing remote ssh commands
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            sudo su
            cd deployment
            export GITHUB_SHA_SHORT=${{ env.GITHUB_SHA_SHORT }}
            docker stack deploy -c docker-compose.yml deployment
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.PORT }}

#      - name: executing remote ssh commands
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: ${{ secrets.REMOTE_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          port: ${{ secrets.PORT }}
#          script_stop: true
#          script:  \
#            cd deployment
#            export GITHUB_SHA_SHORT=${{ env.GITHUB_SHA_SHORT }}
#            docker stack deploy -c docker-compose.yml deployment
